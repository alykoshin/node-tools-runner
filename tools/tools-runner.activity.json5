{
  "base_dir": "./",
  "version": "0.0.0",
  "logLevel": "debug",
  "actions": {
    "default": [ "print", "\nThis Activity requires specific Action name to be provided\n" ],

    "_build": [ "list",
      ["print", "WARN: dist/ is added to Git"],
      ["clean-dist"],
      ["tsc-build"], 
    ],

    "build": [ "list",
      ["_build"], 
      ["$version", "patch" ]],

    "clean-dist": [ "list",
      ["$shelljs", "rm", "-rf", "dist/*" ],
      ["$shelljs", "mkdir", "-p", "dist" ]], 

    "tsc-build": [ "list",
      // ["shell-command", ".\\node_modules\\.bin\\tsc --verbose", { "cwd": "./", "env": {} } ]
      ["shell-command", ".\\node_modules\\.bin\\tsc --build ./tsconfig.json --verbose", { "cwd": "./", "env": {} } ]
      // ["shell-command", ".\\node_modules\\.bin\\tsc --build ./tsconfig.json --verbose", { "cwd": "./", "env": {} } ]
    ],
    "tsc-force": [ "list",
      // ["shell-command", ".\\node_modules\\.bin\\tsc --verbose", { "cwd": "./", "env": {} } ]
      ["shell-command", ".\\node_modules\\.bin\\tsc --build ./tsconfig.json --force --verbose", { "cwd": "./", "env": {} } ]
      // ["shell-command", ".\\node_modules\\.bin\\tsc --build ./tsconfig.json --verbose", { "cwd": "./", "env": {} } ]
    ],

    "-download-lisp-examples": [
      "shell-command", ".\\node_modules\\.bin\\ts-node ./src/apps/translator-downloader/download_lisp_examples.ts"
    ],
    "-cl2jl": [
      "shell-command", ".\\node_modules\\.bin\\ts-node ./src/apps/translator/cl2jl.ts"
    ],

    "-save": [";", "$axios", "get", "https://raw.githubusercontent.com/devijvers/lisp.js/master/lisp/grammar/lisp.pegjs"],

    "-rebuild-grammar": [
      "list",
      ["$shelljs", "mkdir", "-p", "./resources/downloads/" ],
      ["plist",
        ["list",
          ["str:to-file",  "./resources/downloads/lisp.pegjs", 
            ["$axios", "get", "https://raw.githubusercontent.com/devijvers/lisp.js/master/lisp/grammar/lisp.pegjs"]],
          ["plist",
            ["shell-command", "node_modules\\.bin\\peggy -o resources/lisp.js resources/downloads/lisp.pegjs"],
            ["shell-command", "node_modules\\.bin\\peggy --plugin ./node_modules/ts-pegjs/dist/tspegjs -o resources/downloads/lisp.ts resources/lisp.pegjs"]]],
        ["list",
          ["str:to-file",  "./resources/downloads/grammar.pegjs", 
            ["$axios", "get", "https://raw.githubusercontent.com/honza/inertia/master/inertia/grammar.pegjs"]],
          ["plist",
            ["shell-command", "node_modules\\.bin\\peggy -o resources/grammar.js resources/downloads/grammar.pegjs"],
            ["shell-command", "node_modules\\.bin\\peggy --plugin ./node_modules/ts-pegjs/dist/tspegjs -o resources/grammar.ts resources/downloads/grammar.pegjs"]]]
      ]
    ],

    "-dl-3rd": [
      "list",
      ["setq", "$$path", "./resources/downloads/" ],
      ["$shelljs", "mkdir", "-p", "${ $$path }" ],
      ["plist",
        ["str:to-file",  "${ $$path }sourceforge.net_p_sbcl_sbcl_ci_master_tree_src_code_pred.lisp", 
          ["$axios", "get", "https://sourceforge.net/p/sbcl/sbcl/ci/master/tree/src/code/pred.lisp?format=raw"]]
      ]
    ],

    "-test-git-clean": [
      "list",
      ["print", "Ensure Git directory is clean..."],
      [";", "shell-command", "git status --untracked-files=no --porcelain`"],
      ["shell-command", "git status --untracked-files=yes --porcelain"]
    ],
    "git-assert-clean": [
      "list",
      [";","if"],
      [";","shell-command", "sleep 5"],
      ["print", "Check if Git directory is clean..."],
      ["assert",
        ["not", ["shell-command", "git status --untracked-files=all --porcelain"] ], 
          "\n\nGit directory is not clean. Please check output of 'git status' for the details\n\n" ],
      [";","print", "TRUE"],
      [";","print", "FALSE"]
    ],
    "git-add": ["shell-command", "git add ."],
    "git-commit": ["shell-command", "git commit -am \"auto commit\""],
    "git-push":   ["shell-command", "git push --follow-tags"],
    "npm-publish-public":  ["shell-command", "npm publish --access public"],
    "npm-publish-private": ["shell-command", "npm publish --access private"],
    "jsdoc":      [
      "list",
      ["$shelljs", "rm", "-rf", "jsdoc/*" ],
      ["shell-command", 
        ".\\node_modules\\.bin\\jsdoc ./src/actions/ -r -c jsdoc.conf.json -d jsdoc/", { "cwd": "./", "env": {} } ]],
    "test-core-primitives": [
      "list",
      ["shell-command", 
        "ts-node ./src/apps/test-runner/core-test-runner.ts", { "cwd": "./", "env": {} } ]],
    "test-main": [
      "list",
      ["shell-command", 
        "ts-node ./src/cli.ts ./src/tests/lisp-like/conditionals.jl.ts", { "cwd": "./", "env": {} } ]],
    "build-add-commit-push": [ "list",
      ["_build"], 
      ["git-add"], 
      ["git-commit"], 
      ["$version", "patch" ],
      ["git-assert-clean"],
      ["git-push"] ]
  }
}
